@model ReserveVM

@{
    ViewBag.Title = "Home | Reserve";
    // CheckIn within 30 days range
    string min = "TODO";
    string max = "TODO";
}

<p>
    - CheckIn within 30 days range (@min to @max)<br>
    - CheckOut within 10 days range (after CheckIn)
</p>

<form class="form" method="post">
    <div asp-validation-summary="ModelOnly"></div>
    
    <label asp-for="TypeId"></label>
    <select asp-for="TypeId" asp-items="ViewBag.TypeList">
        <option value="">- Select One -</option>
    </select>
    <span asp-validation-for="TypeId"></span>

    <label asp-for="CheckIn"></label>
    <input asp-for="CheckIn" min="@min" max="@max">
    <span asp-validation-for="CheckIn"></span>

    <label asp-for="CheckOut"></label>
    <input asp-for="CheckOut">
    <span asp-validation-for="CheckOut"></span>

    <label>Days</label>
    <span id="days"></span>
    <br>

    <section>
        <button>Reserve</button>
        <button type="reset">Reset</button>
    </section>
</form>

@section foot {
    <script>
        // 1. Extend built-in Date object
        //    d.addDays(days) --> return new Date object after days added
        Date.prototype.addDays = function (days) {
            // TODO
        };

        // 2. Extend built-in Date object
        //    d.format() --> return value in YYYY-MM-DD format
        Date.prototype.format = function () {
            // TODO
        };

        // 3. #CheckIn input event
        //    --> Update #CheckOut min = #CheckIn +  1 day 
        //    --> Update #CheckOut max = #CheckIn + 10 days
        //    --> Adjust #CheckOut value (within range)
        $('#CheckIn').on('input', e => {
            // TODO
        });

        // 4. #CheckIn, #CheckOut input event
        //    --> Calculate days difference
        //    --> 1 day = 24 * 60 * 60 * 1000 ms
        $('#CheckIn,#CheckOut').on('input', e => {
            // TODO
        });

        // 5. Run #CheckIn input event for once
        $('#CheckIn').trigger('input');
    </script>
}
